name: Release Ubuntu Images
on:
  push:
    branches:
      - master
  workflow_dispatch:


env:
  18.04_t: '18_04'
  20.04_t: '20_04'

jobs:
  default:
    strategy:
      matrix:
        distrib: ['18', '20']
    runs-on: ubuntu-latest
    env:
      OS_VERSION: ${{ matrix.distrib }}.04
      OS_TAG: ${{ matrix.distrib }}_04
      IMAGE_TAG: default
      IMAGE_FULL_NAME: ubuntu_${{ matrix.distrib }}_04:default
    steps:
      - uses: actions/checkout@v2

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build ${{env.IMAGE_TAG}} image
        run: |
          docker build $GITHUB_WORKSPACE/images/ubuntu \
          --tag $IMAGE_FULL_NAME \
          --label "runnumber=${GITHUB_RUN_ID}" \
          --build-arg version=$OS_VERSION

      - name: Push ${{env.IMAGE_TAG}} image
        run: |
          IMAGE_ID=$(echo ghcr.io/${{ github.repository_owner }}/$IMAGE_FULL_NAME | tr '[A-Z]' '[a-z]')
          docker tag $IMAGE_FULL_NAME $IMAGE_ID
          docker push $IMAGE_ID

      - name: Generate failure badge
        if: failure()
        run: |
          wget -O  "${OS_VERSION}_default.svg" "https://img.shields.io/badge/$IMAGE_FULL_NAME-failed-red?style=plastic&logo=docker"

      - name: Generate success badge
        if: success()
        run: |
          wget -O  "${OS_VERSION}_default.svg" "https://img.shields.io/badge/$IMAGE_FULL_NAME-passed-brightgreen?style=plastic&logo=docker"

      - name: Generate cancelled badge
        if: cancelled()
        run: |
          wget -O "${OS_VERSION}_default.svg" "https://img.shields.io/badge/$IMAGE_FULL_NAME-cancelled-lightgray?style=plastic&logo=docker"

      - name: Upload badge
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: "${{ env.OS_VERSION }}_default"
          path: ${{ env.OS_VERSION }}_default.svg
          retention-days: 1


  clang:
    needs: default
    strategy:
      fail-fast: false
      matrix:
        distrib: ['18', '20']
        compiler: ['clang-12', 'clang-13', 'clang-14']
        experimental: [false]
        exclude:
          - distrib: '18'
            compiler: 'clang-14'
            experimental: false
        include:
          - distrib: '18'
            compiler: 'clang-14'
            experimental: true            
    continue-on-error: ${{ matrix.experimental }}
            
    runs-on: ubuntu-latest
    env:
      OS_VERSION: ${{ matrix.distrib }}.04
      OS_TAG: ${{ matrix.distrib }}_04
      IMAGE_TAG: ${{ matrix.compiler }}
      IMAGE_FULL_NAME: ubuntu_${{ matrix.distrib }}_04:${{ matrix.compiler }}    
    steps:
      - uses: actions/checkout@v2

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build ${{ env.IMAGE_TAG }} image
        run: |
          docker build $GITHUB_WORKSPACE/images/ubuntu/${{ matrix.compiler }} \
          --tag $IMAGE_FULL_NAME \
          --label "runnumber=${GITHUB_RUN_ID}" \
          --build-arg base_tag=$OS_TAG

      - name: Push ${{ env.IMAGE_TAG }} image
        run: |
          IMAGE_ID=$(echo ghcr.io/${{ github.repository_owner }}/$IMAGE_FULL_NAME | tr '[A-Z]' '[a-z]')
          docker tag $IMAGE_FULL_NAME $IMAGE_ID
          docker push $IMAGE_ID

      - name: Generate failure badge
        if: failure()
        run: |
          COMPILER_TAG=$(echo ${{ matrix.compiler }} | tr '-' ' ')
          DISPLAY_IMAGE_NAME="ubuntu_$IMAGE_TAG:$COMPILER_TAG"
          wget -O  "${OS_VERSION}_${{ matrix.compiler }}.svg" "https://img.shields.io/badge/$DISPLAY_IMAGE_NAME-failed-red?style=plastic&logo=docker"

      - name: Generate success badge
        if: success()
        run: |
          COMPILER_TAG=$(echo ${{ matrix.compiler }} | tr '-' ' ')
          DISPLAY_IMAGE_NAME="ubuntu_$IMAGE_TAG:$COMPILER_TAG"
          wget -O  "${OS_VERSION}_${{ matrix.compiler }}.svg" "https://img.shields.io/badge/$IMAGE_NAME-passed-brightgreen?style=plastic&logo=docker"

      - name: Generate cancelled badge
        if: cancelled()
        run: |
          COMPILER_TAG=$(echo ${{ matrix.compiler }} | tr '-' ' ')
          DISPLAY_IMAGE_NAME="ubuntu_$IMAGE_TAG:$COMPILER_TAG"
          wget -O  "${OS_VERSION}_${{ matrix.compiler }}.svg" "https://img.shields.io/badge/$IMAGE_NAME-cancelled-lightgray?style=plastic&logo=docker"

      - name: Upload badge
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: "${{ env.OS_VERSION }}_${{ matrix.compiler }}"
          path: ${{ env.OS_VERSION }}_${{ matrix.compiler }}.svg
          retention-days: 1

  gcc:
    needs: clang
    strategy:
      matrix:
        distrib: ['18.04', '20.04']
        compiler: ['gcc-10', 'gcc-11']
            
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build ${{ matrix.compiler }} image
        run: |
          IMAGE_TAG=$(echo ${{ matrix.distrib }} | tr '.' '_')
          IMAGE_NAME=ubuntu_$IMAGE_TAG:${{ matrix.compiler }} 

          docker build $GITHUB_WORKSPACE/images/ubuntu/${{ matrix.compiler }} \
          --tag $IMAGE_NAME \
          --label "runnumber=${GITHUB_RUN_ID}" \
          --build-arg base_tag=$IMAGE_TAG

      - name: Push default image
        run: |
          IMAGE_TAG=$(echo ${{ matrix.distrib }} | tr '.' '_')
          IMAGE_NAME=ubuntu_$IMAGE_TAG:${{ matrix.compiler }} 
          IMAGE_ID=$(echo ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME | tr '[A-Z]' '[a-z]')

          docker tag $IMAGE_NAME $IMAGE_ID
          docker push $IMAGE_ID

      - name: Generate failure badge
        if: failure()
        run: |
          IMAGE_TAG=$(echo ${{ matrix.distrib }} | tr '.' '_')
          COMPILER_TAG=$(echo ${{ matrix.compiler }} | tr '-' ' ')
          IMAGE_NAME="ubuntu_$IMAGE_TAG:$COMPILER_TAG"
          wget -O  "${{ matrix.distrib }}_${{ matrix.compiler }}.svg" "https://img.shields.io/badge/$IMAGE_NAME-failed-red?style=plastic&logo=docker"

      - name: Generate success badge
        if: success()
        run: |
          IMAGE_TAG=$(echo ${{ matrix.distrib }} | tr '.' '_')
          COMPILER_TAG=$(echo ${{ matrix.compiler }} | tr '-' ' ')
          IMAGE_NAME="ubuntu_$IMAGE_TAG:$COMPILER_TAG"
          wget -O  "${{ matrix.distrib }}_${{ matrix.compiler }}.svg" "https://img.shields.io/badge/$IMAGE_NAME-passed-brightgreen?style=plastic&logo=docker"

      - name: Generate cancelled badge
        if: cancelled()
        run: |
          IMAGE_TAG=$(echo ${{ matrix.distrib }} | tr '.' '_')
          COMPILER_TAG=$(echo ${{ matrix.compiler }} | tr '-' ' ')
          IMAGE_NAME="ubuntu_$IMAGE_TAG:$COMPILER_TAG"
          wget -O "${{ matrix.distrib }}_${{ matrix.compiler }}.svg" "https://img.shields.io/badge/$IMAGE_NAME-cancelled-lightgray?style=plastic&logo=docker"

      - name: Upload badge
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: "${{ matrix.distrib }}_${{ matrix.compiler }}"
          path: ${{ matrix.distrib }}_${{ matrix.compiler }}.svg
          retention-days: 1


  clang_cancelled:
    runs-on: ubuntu-latest
    needs: [default]
    if: always() && (needs.default.result == 'failure' || needs.default.result == 'cancelled')
    strategy:
      matrix:
        distrib: ['18.04', '20.04']
        compiler: ['clang-12', 'clang-13', 'clang-14']
        exclude:
          - distrib: '18.04'
            compiler: 'clang-14'
    steps:
      - name: Generate cancelled badge
        run: |
          IMAGE_TAG=$(echo ${{ matrix.distrib }} | tr '.' '_')
          COMPILER_TAG=$(echo ${{ matrix.compiler }} | tr '-' ' ')
          IMAGE_NAME="ubuntu_$IMAGE_TAG:$COMPILER_TAG"
          wget -O "${{ matrix.distrib }}_${{ matrix.compiler }}.svg" "https://img.shields.io/badge/$IMAGE_NAME-cancelled-lightgray?style=plastic&logo=docker"

      - name: Upload badge
        uses: actions/upload-artifact@v2
        with:
          name: "${{ matrix.distrib }}_${{ matrix.compiler }}"
          path: ${{ matrix.distrib }}_${{ matrix.compiler }}.svg
          retention-days: 1


  gcc_cancelled:
    runs-on: ubuntu-latest
    needs: [default, clang]
    if: always() && (needs.default.result == 'failure' || needs.default.result == 'cancelled' || needs.clang.result == 'failure' || needs.clang.result == 'cancelled')
    strategy:
      matrix:
        distrib: ['18.04', '20.04']
        compiler: ['gcc-10', 'gcc-11']

    steps:
      - name: Generate cancelled badge
        run: |
          IMAGE_TAG=$(echo ${{ matrix.distrib }} | tr '.' '_')
          COMPILER_TAG=$(echo ${{ matrix.compiler }} | tr '-' ' ')
          IMAGE_NAME="ubuntu_$IMAGE_TAG:$COMPILER_TAG"
          wget -O "${{ matrix.distrib }}_${{ matrix.compiler }}.svg" "https://img.shields.io/badge/$IMAGE_NAME-cancelled-lightgray?style=plastic&logo=docker"

      - name: Upload badge
        uses: actions/upload-artifact@v2
        with:
          name: "${{ matrix.distrib }}_${{ matrix.compiler }}"
          path: ${{ matrix.distrib }}_${{ matrix.compiler }}.svg
          retention-days: 1


  upload_badges:
    needs : [default, clang, gcc, clang_cancelled, gcc_cancelled]
    if: always()

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: tags
        
      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: tags

      - name: Deploy
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: tags
          FOLDER: .
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SQUASH_HISTORY: true