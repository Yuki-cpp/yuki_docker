name: Release 20.04 Images
on:
  workflow_dispatch:
    inputs:
      distribution:
        type: choice
        description: Ubuntu version to target
        options: 
        - '18.04'
        - '20.04'

env:
  18.04_n: 'beaver'
  20.04_n: 'fossa'
  18.04_t: '18_04'
  20.04_t: '20_04'

jobs:
  default:
    runs-on: ubuntu-latest
    steps:
      - name: dfd
        run: |
          echo ${{ env['20.04_t'] }}
          echo env['${{ github.event.inputs.distribution }}_t']
#       - uses: actions/checkout@v2
#       - name: Log in to registry
#         run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
#       - name: Build image
#         run: |
#           IMAGE_NAME=ubuntu_20_04:default
#           docker build $GITHUB_WORKSPACE/images/ci --tag ubuntu_20_04:default --label "runnumber=${GITHUB_RUN_ID}" --build-arg version=20.04
#       - name: Push image
#         run: |
#           IMAGE_ID=$(echo ghcr.io/${{ github.repository_owner }}/ubuntu_20_04:default | tr '[A-Z]' '[a-z]')
#           docker tag ubuntu_20_04:default $IMAGE_ID
#           docker push $IMAGE_ID

#   clang-13:
#     runs-on: ubuntu-latest
#     needs: default
#     steps:
#       - uses: actions/checkout@v2
#       - name: Log in to registry
#         run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
#       - name: Build image
#         run: |
#           IMAGE_NAME=ubuntu_20_04:clang-13
#           docker build $GITHUB_WORKSPACE/images/ci/clang-13 --tag ubuntu_20_04:clang-13 --label "runnumber=${GITHUB_RUN_ID}"
#       - name: Push image
#         run: |
#           IMAGE_ID=$(echo ghcr.io/${{ github.repository_owner }}/ubuntu_20_04:clang-13 | tr '[A-Z]' '[a-z]')
#           docker tag ubuntu_20_04:clang-13 $IMAGE_ID
#           docker push $IMAGE_ID
#   clang-14:
#     runs-on: ubuntu-latest
#     needs: default
#     steps:
#       - uses: actions/checkout@v2
#       - name: Log in to registry
#         run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
#       - name: Build image
#         run: |
#           IMAGE_NAME=ubuntu_20_04:clang-14
#           docker build $GITHUB_WORKSPACE/images/ci/clang-14 --tag ubuntu_20_04:clang-14 --label "runnumber=${GITHUB_RUN_ID}"
#       - name: Push image
#         run: |
#           IMAGE_ID=$(echo ghcr.io/${{ github.repository_owner }}/ubuntu_20_04:clang-14 | tr '[A-Z]' '[a-z]')
#           docker tag ubuntu_20_04:clang-14 $IMAGE_ID
#           docker push $IMAGE_ID       
#   gcc-11:
#     runs-on: ubuntu-latest
#     needs: clang-14
#     steps:
#       - uses: actions/checkout@v2
#       - name: Log in to registry
#         run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
#       - name: Build image
#         run: |
#           IMAGE_NAME=ubuntu_20_04:gcc-11
#           docker build $GITHUB_WORKSPACE/images/ci/gcc-11 --tag ubuntu_20_04:gcc-11 --label "runnumber=${GITHUB_RUN_ID}"
#       - name: Push image
#         run: |
#           IMAGE_ID=$(echo ghcr.io/${{ github.repository_owner }}/ubuntu_20_04:gcc-11 | tr '[A-Z]' '[a-z]')
#           docker tag ubuntu_20_04:gcc-11 $IMAGE_ID
#           docker push $IMAGE_ID
          
